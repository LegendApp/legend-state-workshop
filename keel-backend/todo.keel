model Todo {
    fields {
        text Text @default("")
        idUser Text @default("")
        completed Boolean? @default(false)
        deleted Boolean? @default(false)
        oldIsPriority Boolean?
        newPriority Priority?
    }

    actions {
        create createTodo() with (id?, text?, idUser?, completed?, deleted?)
        list listTodos(idUser, updatedAt?)
        update updateTodo(id) with (text?, completed?, idUser?, deleted?)
        delete deleteTodo(id)
        update deleteTodoSoft(id) {
            @set(todo.deleted = true)
        }
        read listUsers(updatedAt?) returns (UsersReturn) {
            @permission(expression: true)
        }
    }

    @permission(
        actions: [get, list, update, delete, create],
        expression: true
    )
}

message User {
    id Text
    updatedAt Timestamp?
}

message Users {
    users User[]
}

message UsersReturn {
    results User[]
}

enum Priority {
    None
    Low
    Medium
    High
}
